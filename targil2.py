# -*- coding: utf-8 -*-
"""Targil2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VE3_dmbJ9L2WL21YNH7E3JbRifLRZMfg
"""

import numpy as np
import random
import matplotlib.pyplot as plt

def h(x):
    a = np.random.random()
    return -1 if a < 0.5 else 1

def AMSBasic(stream):
    x = 0
    for i in stream:
        x += h(i)
    return np.power(x,2)

def AMSFinal(stream,epsilon,delta):
    z = np.zeros( (epsilon, delta) )
    for i in range(epsilon):
        for j in range(delta):
            z[i][j] = (AMSBasic(stream))
    return z

if __name__ == "__main__":
    random.seed(149)
    uniques = 100000
    stream = np.random.randint(uniques, size=100000)
    copies = 10

    # set epsilon & delta
    epsilon = (1 /np.power(0.25,2)) # epsilon = 0.25
    delta = np.log(1/0.01) # delta = 0.01
    z = []
    s = []
    for element in range(copies):
        # calculate matrix
        res = AMSFinal(stream,int(epsilon)+10,int(delta)+10)
        #median of the means
        z.append(np.median(np.mean(res, axis=1)))
        #means of the medians
        s.append(np.mean(np.median(res, axis=1)))

plt.plot(z)
plt.plot(s)
plt.axhline(y=100000, color='r', linestyle='--')
plt.xlabel('copies')
plt.ylabel('estimator')
plt.title('compare median of means and means of the medians')
plt.show()